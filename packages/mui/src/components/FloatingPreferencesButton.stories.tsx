import {
  Alert,
  Box,
  Card,
  CardContent,
  Chip,
  Paper,
  Stack,
  ThemeProvider,
  Typography,
} from '@mui/material'
import { createTheme } from '@mui/material/styles'
import {
  ConsentProvider,
  resolveTexts,
  TEXT_TEMPLATES,
  useConsent,
  type DesignTokens,
} from '@react-lgpd-consent/core'
import type { Meta, StoryObj } from '@storybook/react-vite'
import { FloatingPreferencesButton } from './FloatingPreferencesButton'

const meta: Meta<typeof FloatingPreferencesButton> = {
  title: 'Components/FloatingPreferencesButton',
  component: FloatingPreferencesButton,
  parameters: {
    layout: 'fullscreen',
    docs: {
      description: {
        component:
          'Bot√£o flutuante que permite ao usu√°rio reabrir o modal de prefer√™ncias de cookies a qualquer momento.',
      },
    },
  },
  argTypes: {
    position: {
      control: { type: 'select' },
      options: ['bottom-left', 'bottom-right', 'top-left', 'top-right'],
    },
    offset: { control: { type: 'number' } },
    tooltip: { control: 'text' },
    hideWhenConsented: { control: 'boolean' },
    FabProps: { control: 'object' },
    icon: { table: { disable: true } },
  },
  args: {
    position: 'bottom-right',
    offset: 24,
    tooltip: undefined,
    hideWhenConsented: false,
  },
}

export default meta
type Story = StoryObj<typeof meta>

export const Default: Story = {
  render: (args) => (
    <ConsentProvider
      categories={{ enabledCategories: ['analytics'] }}
      floatingPreferencesButtonProps={args}
    >
      <Box sx={{ minHeight: '100vh', p: 3, position: 'relative', bgcolor: '#f8fafc' }}>
        <Typography variant="h4" gutterBottom color="primary">
          üè† Bot√£o Flutuante Padr√£o
        </Typography>
        <Typography variant="body1" sx={{ mb: 3 }}>
          Bot√£o flutuante acess√≠vel que permite reconfigurar prefer√™ncias a qualquer momento.
        </Typography>

        <Stack direction="row" spacing={1} flexWrap="wrap" gap={1} sx={{ mb: 3 }}>
          <Chip label="Position: bottom-right" size="small" color="primary" variant="outlined" />
          <Chip label="Always visible" size="small" color="success" variant="outlined" />
          <Chip label="Accessibility: ‚úÖ" size="small" color="info" variant="outlined" />
        </Stack>

        <Card elevation={1} sx={{ mb: 3 }}>
          <CardContent>
            <Typography variant="h6" gutterBottom>
              üì± Experi√™ncia do Usu√°rio
            </Typography>
            <Typography variant="body2" color="text.secondary">
              O bot√£o flutuante garante que o usu√°rio sempre tenha acesso √†s configura√ß√µes de
              privacidade, promovendo transpar√™ncia e controle sobre seus dados.
            </Typography>
          </CardContent>
        </Card>

        <Paper elevation={1} sx={{ p: 3, bgcolor: 'grey.50' }}>
          <Typography variant="body2" color="text.secondary">
            üí° <strong>Dica:</strong> O bot√£o aparece ap√≥s o usu√°rio tomar uma decis√£o inicial sobre
            cookies e permanece acess√≠vel durante toda a navega√ß√£o.
          </Typography>
        </Paper>

        <FloatingPreferencesButton {...args} />
      </Box>
    </ConsentProvider>
  ),
}

export const CustomPosition: Story = {
  render: (args) => (
    <ConsentProvider
      categories={{ enabledCategories: ['analytics'] }}
      floatingPreferencesButtonProps={args}
    >
      <Box sx={{ minHeight: '100vh', p: 3, position: 'relative', bgcolor: '#f0f9ff' }}>
        <Typography variant="h4" gutterBottom color="info.dark">
          üìç Posicionamento Customizado
        </Typography>
        <Typography variant="body1" sx={{ mb: 3 }}>
          Demonstra como personalizar posi√ß√£o e estilo do bot√£o flutuante.
        </Typography>

        <Stack direction="row" spacing={1} flexWrap="wrap" gap={1} sx={{ mb: 3 }}>
          <Chip label="Custom position" size="small" color="info" />
          <Chip label="MUI props" size="small" color="secondary" variant="outlined" />
          <Chip label="Flexible styling" size="small" color="primary" variant="outlined" />
        </Stack>

        <Card elevation={1} sx={{ mb: 3, bgcolor: '#dbeafe' }}>
          <CardContent>
            <Typography variant="h6" gutterBottom>
              üé® Personaliza√ß√£o Avan√ßada
            </Typography>
            <Typography variant="body2">
              O bot√£o flutuante herda todas as props do Fab do Material-UI, permitindo customiza√ß√£o
              completa de cores, tamanhos, √≠cones e comportamento.
            </Typography>
          </CardContent>
        </Card>

        <Paper elevation={2} sx={{ p: 3, bgcolor: '#bfdbfe', mb: 3 }}>
          <Typography variant="h6" gutterBottom>
            √Årea de Conte√∫do Principal
          </Typography>
          <Typography variant="body2">
            O bot√£o se adapta automaticamente ao layout, mantendo acessibilidade.
          </Typography>
        </Paper>

        <FloatingPreferencesButton {...args} />
      </Box>
    </ConsentProvider>
  ),
}

export const WithLongContent: Story = {
  render: (args) => (
    <ConsentProvider
      categories={{ enabledCategories: ['analytics', 'marketing', 'functional'] }}
      floatingPreferencesButtonProps={args}
    >
      <Box sx={{ minHeight: '200vh', p: 3, position: 'relative' }}>
        <Typography variant="h4" gutterBottom>
          P√°gina Longa com Scroll
        </Typography>
        <Typography variant="body1" sx={{ mb: 3 }}>
          Esta p√°gina tem conte√∫do suficiente para demonstrar como o bot√£o flutuante permanece
          vis√≠vel durante o scroll.
        </Typography>

        {Array.from({ length: 10 }, (_, i) => (
          <Box key={i} sx={{ mb: 4 }}>
            <Typography variant="h6" gutterBottom>
              Se√ß√£o {i + 1}
            </Typography>
            <Typography variant="body2" sx={{ mb: 2 }}>
              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor
              incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
              exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
            </Typography>
            <Box
              sx={{ height: '150px', bgcolor: `hsl(${i * 36}, 50%, 95%)`, p: 2, borderRadius: 1 }}
            >
              <Typography variant="body2">
                Conte√∫do da se√ß√£o {i + 1}. Role a p√°gina para ver como o bot√£o flutuante permanece
                fixo na posi√ß√£o.
              </Typography>
            </Box>
          </Box>
        ))}

        <Typography variant="h6" sx={{ mt: 4 }}>
          Final da P√°gina
        </Typography>
        <Typography variant="body2" color="text.secondary">
          O bot√£o flutuante deve estar sempre vis√≠vel, mesmo aqui no final da p√°gina.
        </Typography>

        <FloatingPreferencesButton {...args} />
      </Box>
    </ConsentProvider>
  ),
}

export const Disabled: Story = {
  render: (args) => (
    <ConsentProvider
      categories={{ enabledCategories: ['analytics'] }}
      disableFloatingPreferencesButton={true}
      floatingPreferencesButtonProps={args}
    >
      <Box sx={{ minHeight: '100vh', p: 3 }}>
        <Typography variant="h4" gutterBottom>
          Bot√£o Flutuante Desabilitado
        </Typography>
        <Typography variant="body1" sx={{ mb: 3 }}>
          Quando a prop <code>disableFloatingPreferencesButton</code> est√° definida como true, o
          bot√£o flutuante n√£o aparece.
        </Typography>

        <Typography variant="body2" color="text.secondary">
          Esta configura√ß√£o √© √∫til quando voc√™ quer fornecer sua pr√≥pria forma de acessar as
          configura√ß√µes de cookies, como um link no footer ou menu.
        </Typography>

        {/* n√£o renderizamos manualmente o FloatingPreferencesButton aqui: o ConsentProvider gerencia sua exibi√ß√£o
      quando `disableFloatingPreferencesButton` est√° false. Como queremos demonstrar o caso desabilitado,
      deixamos o provider controlar a renderiza√ß√£o e n√£o inclu√≠mos o componente explicitamente. */}
      </Box>
    </ConsentProvider>
  ),
}

export const MultipleSizes: Story = {
  render: (args) => (
    <ConsentProvider
      categories={{ enabledCategories: ['analytics'] }}
      floatingPreferencesButtonProps={args}
    >
      <Box sx={{ minHeight: '100vh', p: 3, position: 'relative' }}>
        <Typography variant="h4" gutterBottom>
          Tamanhos Diferentes
        </Typography>
        <Typography variant="body1" sx={{ mb: 3 }}>
          Demonstra√ß√£o de diferentes tamanhos e estilos do bot√£o flutuante.
        </Typography>

        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mb: 4 }}>
          <Typography variant="h6">Varia√ß√µes Dispon√≠veis:</Typography>
          <Typography variant="body2">
            ‚Ä¢ Tamanho padr√£o (demonstrado no canto inferior direito)
          </Typography>
          <Typography variant="body2">‚Ä¢ Cores customizadas via sx prop</Typography>
          <Typography variant="body2">‚Ä¢ Posicionamento flex√≠vel</Typography>
        </Box>

        <Box sx={{ height: '400px', bgcolor: '#f8f9fa', p: 2, borderRadius: 1 }}>
          <Typography variant="body2">
            √Årea de conte√∫do para demonstrar o bot√£o em diferentes contextos visuais.
          </Typography>
        </Box>

        <FloatingPreferencesButton {...args} />
      </Box>
    </ConsentProvider>
  ),
}

export const DarkTheme: Story = {
  args: {
    position: 'bottom-right',
    offset: 24,
  },
  render: (args) => (
    <ThemeProvider theme={createTheme({ palette: { mode: 'dark' } })}>
      <ConsentProvider
        categories={{ enabledCategories: ['analytics', 'marketing'] }}
        floatingPreferencesButtonProps={args}
      >
        <Box
          sx={{
            minHeight: '100vh',
            p: 3,
            position: 'relative',
            bgcolor: '#121212',
            color: 'white',
          }}
        >
          <Typography variant="h4" gutterBottom color="white">
            Tema Escuro - Floating Button
          </Typography>
          <FloatingPreferencesButton {...args} />
        </Box>
      </ConsentProvider>
    </ThemeProvider>
  ),
}

// ===== NOVOS STORIES v0.4.1 =====

// Status Dashboard Component
const StatusDashboard = () => {
  const { preferences, consented, isModalOpen } = useConsent()

  return (
    <Card elevation={2} sx={{ mb: 3 }}>
      <CardContent>
        <Typography variant="h6" gutterBottom>
          üìä Status do Sistema v0.4.1
        </Typography>

        <Alert severity={consented ? 'success' : 'info'} sx={{ mb: 2 }}>
          Status: {consented ? '‚úÖ Configurado' : '‚è≥ Aguardando'} | Modal:{' '}
          {isModalOpen ? 'üîì Aberto' : 'üîí Fechado'}
        </Alert>

        <Stack direction="row" spacing={1} flexWrap="wrap" gap={1}>
          {Object.entries(preferences).map(([category, enabled]) => (
            <Chip
              key={category}
              label={`${category}: ${enabled ? '‚úÖ' : '‚ùå'}`}
              size="small"
              color={enabled ? 'success' : 'default'}
              variant={enabled ? 'filled' : 'outlined'}
            />
          ))}
        </Stack>
      </CardContent>
    </Card>
  )
}

export const WithAdvancedPositioning: Story = {
  args: {
    position: 'bottom-left',
    offset: 32,
  },
  render: (args) => {
    const advancedTexts = resolveTexts(TEXT_TEMPLATES.government, {
      variant: 'formal',
      language: 'pt',
    })

    return (
      <ConsentProvider
        categories={{
          enabledCategories: ['analytics', 'functional', 'marketing'],
        }}
        texts={advancedTexts}
        floatingPreferencesButtonProps={args}
      >
        <Box sx={{ minHeight: '100vh', p: 3, position: 'relative', bgcolor: '#f8f9fa' }}>
          <Typography variant="h4" gutterBottom color="primary">
            üéØ Posicionamento Avan√ßado v0.4.1
          </Typography>

          <StatusDashboard />

          <Stack direction={{ xs: 'column', md: 'row' }} spacing={3}>
            <Paper elevation={1} sx={{ p: 3, height: '300px', flex: 1 }}>
              <Typography variant="h6" gutterBottom>
                Conte√∫do Principal
              </Typography>
              <Typography variant="body2" color="text.secondary">
                O bot√£o flutuante posicionado no canto inferior esquerdo com offset personalizado.
              </Typography>
            </Paper>
            <Paper elevation={1} sx={{ p: 3, height: '300px', flex: 1 }}>
              <Typography variant="h6" gutterBottom>
                √Årea Secund√°ria
              </Typography>
              <Typography variant="body2" color="text.secondary">
                Demonstra como o bot√£o se adapta a diferentes layouts de p√°gina.
              </Typography>
            </Paper>
          </Stack>

          <Box sx={{ mt: 3 }}>
            <Stack direction="row" spacing={1} flexWrap="wrap" gap={1}>
              <Chip label="Position: bottom-left" size="small" color="info" />
              <Chip label="Offset: 32px" size="small" color="secondary" />
              <Chip label="Template: government" size="small" color="warning" />
              <Chip label="Variant: formal" size="small" color="success" />
            </Stack>
          </Box>

          <FloatingPreferencesButton {...args} />
        </Box>
      </ConsentProvider>
    )
  },
}

export const WithCustomDesignTokens: Story = {
  args: {
    position: 'top-right',
    offset: 24,
  },
  render: (args) => {
    const modernDesignTokens: DesignTokens = {
      colors: {
        primary: {
          main: '#7c3aed', // Purple
          light: '#a78bfa',
          dark: '#5b21b6',
        },
        secondary: {
          main: '#059669', // Emerald
          light: '#10b981',
          dark: '#047857',
        },
      },
      layout: {
        position: 'top',
        backdrop: '#1f2937',
      },
    }

    return (
      <ConsentProvider
        categories={{
          enabledCategories: ['analytics', 'marketing', 'functional', 'social'],
        }}
        designTokens={modernDesignTokens}
        floatingPreferencesButtonProps={args}
      >
        <Box sx={{ minHeight: '100vh', p: 3, position: 'relative', bgcolor: '#f3f4f6' }}>
          <Typography variant="h4" gutterBottom sx={{ color: '#7c3aed' }}>
            üé® Design Tokens v0.4.1
          </Typography>

          <StatusDashboard />

          <Card elevation={2} sx={{ mb: 3 }}>
            <CardContent>
              <Typography variant="h6" gutterBottom>
                Customiza√ß√µes Aplicadas
              </Typography>
              <Stack direction="row" spacing={1} flexWrap="wrap" gap={1}>
                <Chip
                  label="Primary: Purple"
                  size="small"
                  sx={{ bgcolor: '#7c3aed', color: 'white' }}
                />
                <Chip
                  label="Secondary: Emerald"
                  size="small"
                  sx={{ bgcolor: '#059669', color: 'white' }}
                />
                <Chip label="Position: top-right" size="small" color="info" />
                <Chip label="Custom Backdrop" size="small" color="warning" />
              </Stack>
            </CardContent>
          </Card>

          <Paper elevation={1} sx={{ p: 3, bgcolor: 'white' }}>
            <Typography variant="h6" gutterBottom>
              Interface Personalizada
            </Typography>
            <Typography variant="body1" sx={{ mb: 2 }}>
              O bot√£o flutuante herda as cores personalizadas dos design tokens, mantendo
              consist√™ncia visual com o resto da aplica√ß√£o.
            </Typography>
            <Alert severity="info">
              üí° <strong>Dica:</strong> Todos os componentes da biblioteca respeitam os design
              tokens personalizados para uma experi√™ncia visual coesa.
            </Alert>
          </Paper>

          <FloatingPreferencesButton {...args} />
        </Box>
      </ConsentProvider>
    )
  },
}

export const MultipleCategories: Story = {
  args: {
    position: 'bottom-right',
    offset: 20,
    tooltip: 'Configurar todas as categorias',
  },
  render: (args) => (
    <ConsentProvider
      categories={{
        enabledCategories: ['necessary', 'analytics', 'marketing', 'functional', 'social'],
        customCategories: [
          {
            id: 'ai',
            name: 'Intelig√™ncia Artificial',
            description: 'Recursos de IA para personaliza√ß√£o avan√ßada',
          },
          {
            id: 'biometric',
            name: 'Biom√©tricos',
            description: 'Dados biom√©tricos para autentica√ß√£o',
          },
        ],
      }}
      floatingPreferencesButtonProps={args}
    >
      <Box sx={{ minHeight: '100vh', p: 3, position: 'relative', bgcolor: '#fef7e0' }}>
        <Typography variant="h4" gutterBottom color="warning.dark">
          üîß M√∫ltiplas Categorias v0.4.1
        </Typography>

        <StatusDashboard />

        <Card elevation={2} sx={{ mb: 3 }}>
          <CardContent>
            <Typography variant="h6" gutterBottom>
              Categorias Dispon√≠veis (7 total)
            </Typography>
            <Stack direction="row" spacing={1} flexWrap="wrap" gap={1}>
              <Chip label="necessary" size="small" color="error" variant="outlined" />
              <Chip label="analytics" size="small" color="info" variant="outlined" />
              <Chip label="marketing" size="small" color="secondary" variant="outlined" />
              <Chip label="functional" size="small" color="success" variant="outlined" />
              <Chip label="social" size="small" color="primary" variant="outlined" />
              <Chip label="ai" size="small" color="warning" variant="outlined" />
              <Chip label="biometric" size="small" sx={{ bgcolor: '#e3f2fd' }} variant="outlined" />
            </Stack>
          </CardContent>
        </Card>

        <Paper elevation={1} sx={{ p: 3 }}>
          <Typography variant="h6" gutterBottom>
            Gerenciamento Complexo
          </Typography>
          <Typography variant="body1" sx={{ mb: 2 }}>
            O bot√£o flutuante permanece simples e acess√≠vel mesmo com m√∫ltiplas categorias
            complexas, incluindo categorias customizadas espec√≠ficas do projeto.
          </Typography>
          <Alert severity="success">
            ‚úÖ <strong>Escalabilidade:</strong> A interface se adapta automaticamente independente
            do n√∫mero de categorias configuradas.
          </Alert>
        </Paper>

        <FloatingPreferencesButton {...args} />
      </Box>
    </ConsentProvider>
  ),
}

export const ResponsiveDemo: Story = {
  args: {
    position: 'bottom-right',
    offset: 16,
  },
  render: (args) => (
    <ConsentProvider
      categories={{
        enabledCategories: ['analytics', 'marketing', 'functional'],
      }}
      floatingPreferencesButtonProps={args}
    >
      <Box
        sx={{
          minHeight: '100vh',
          p: { xs: 2, sm: 3, md: 4 },
          position: 'relative',
          bgcolor: '#f0f9ff',
        }}
      >
        <Typography
          variant="h4"
          gutterBottom
          sx={{
            fontSize: { xs: '1.5rem', sm: '2rem', md: '2.5rem' },
            color: 'primary.main',
          }}
        >
          üì± Responsivo v0.4.1
        </Typography>

        <StatusDashboard />

        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 2, md: 3 }} flexWrap="wrap">
          <Card
            elevation={1}
            sx={{ height: '200px', flex: { xs: 1, sm: '1 1 300px' }, minWidth: '280px' }}
          >
            <CardContent>
              <Typography variant="h6" gutterBottom>
                üì± Mobile
              </Typography>
              <Typography variant="body2" color="text.secondary">
                Bot√£o otimizado para telas pequenas com touch-friendly sizing.
              </Typography>
            </CardContent>
          </Card>
          <Card
            elevation={1}
            sx={{ height: '200px', flex: { xs: 1, sm: '1 1 300px' }, minWidth: '280px' }}
          >
            <CardContent>
              <Typography variant="h6" gutterBottom>
                üì± Tablet
              </Typography>
              <Typography variant="body2" color="text.secondary">
                Posicionamento adaptativo para diferentes orienta√ß√µes.
              </Typography>
            </CardContent>
          </Card>
          <Card
            elevation={1}
            sx={{ height: '200px', flex: { xs: 1, sm: '1 1 300px' }, minWidth: '280px' }}
          >
            <CardContent>
              <Typography variant="h6" gutterBottom>
                üñ•Ô∏è Desktop
              </Typography>
              <Typography variant="body2" color="text.secondary">
                Posicionamento preciso com hover states e tooltips.
              </Typography>
            </CardContent>
          </Card>
        </Stack>

        <Alert severity="info" sx={{ mt: 3 }}>
          <Typography variant="body2">
            üí° <strong>Teste a responsividade:</strong> Redimensione a janela para ver como o bot√£o
            se adapta a diferentes breakpoints.
          </Typography>
        </Alert>

        <FloatingPreferencesButton {...args} />
      </Box>
    </ConsentProvider>
  ),
}
